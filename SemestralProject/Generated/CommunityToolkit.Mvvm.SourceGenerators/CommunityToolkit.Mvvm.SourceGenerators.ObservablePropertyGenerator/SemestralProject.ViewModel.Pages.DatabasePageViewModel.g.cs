// <auto-generated/>
#pragma warning disable
#nullable enable
namespace SemestralProject.ViewModel.Pages
{
    /// <inheritdoc/>
    partial class DatabasePageViewModel
    {
        /// <inheritdoc cref="tables"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<string> Tables
        {
            get => tables;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("tables")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<string>>.Default.Equals(tables, value))
                {
                    OnTablesChanging(value);
                    OnTablesChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.Tables);
                    tables = value;
                    OnTablesChanged(value);
                    OnTablesChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Tables);
                }
            }
        }

        /// <inheritdoc cref="selectedTable"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string? SelectedTable
        {
            get => selectedTable;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string?>.Default.Equals(selectedTable, value))
                {
                    OnSelectedTableChanging(value);
                    OnSelectedTableChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedTable);
                    selectedTable = value;
                    OnSelectedTableChanged(value);
                    OnSelectedTableChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedTable);
                }
            }
        }

        /// <inheritdoc cref="tableData"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Data.DataView TableData
        {
            get => tableData;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("tableData")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Data.DataView>.Default.Equals(tableData, value))
                {
                    OnTableDataChanging(value);
                    OnTableDataChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.TableData);
                    tableData = value;
                    OnTableDataChanged(value);
                    OnTableDataChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.TableData);
                }
            }
        }

        /// <inheritdoc cref="selectedTableData"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Data.DataRowView? SelectedTableData
        {
            get => selectedTableData;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Data.DataRowView?>.Default.Equals(selectedTableData, value))
                {
                    OnSelectedTableDataChanging(value);
                    OnSelectedTableDataChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedTableData);
                    selectedTableData = value;
                    OnSelectedTableDataChanged(value);
                    OnSelectedTableDataChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedTableData);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="Tables"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Tables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTablesChanging(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        /// <summary>Executes the logic for when <see cref="Tables"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Tables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTablesChanging(global::System.Collections.ObjectModel.ObservableCollection<string>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<string> newValue);
        /// <summary>Executes the logic for when <see cref="Tables"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Tables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTablesChanged(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        /// <summary>Executes the logic for when <see cref="Tables"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Tables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTablesChanged(global::System.Collections.ObjectModel.ObservableCollection<string>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<string> newValue);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanging(string? value);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanging(string? oldValue, string? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanged(string? value);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanged(string? oldValue, string? newValue);
        /// <summary>Executes the logic for when <see cref="TableData"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="TableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTableDataChanging(global::System.Data.DataView value);
        /// <summary>Executes the logic for when <see cref="TableData"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="TableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTableDataChanging(global::System.Data.DataView? oldValue, global::System.Data.DataView newValue);
        /// <summary>Executes the logic for when <see cref="TableData"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="TableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTableDataChanged(global::System.Data.DataView value);
        /// <summary>Executes the logic for when <see cref="TableData"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="TableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnTableDataChanged(global::System.Data.DataView? oldValue, global::System.Data.DataView newValue);
        /// <summary>Executes the logic for when <see cref="SelectedTableData"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedTableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableDataChanging(global::System.Data.DataRowView? value);
        /// <summary>Executes the logic for when <see cref="SelectedTableData"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedTableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableDataChanging(global::System.Data.DataRowView? oldValue, global::System.Data.DataRowView? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedTableData"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedTableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableDataChanged(global::System.Data.DataRowView? value);
        /// <summary>Executes the logic for when <see cref="SelectedTableData"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedTableData"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableDataChanged(global::System.Data.DataRowView? oldValue, global::System.Data.DataRowView? newValue);
    }
}