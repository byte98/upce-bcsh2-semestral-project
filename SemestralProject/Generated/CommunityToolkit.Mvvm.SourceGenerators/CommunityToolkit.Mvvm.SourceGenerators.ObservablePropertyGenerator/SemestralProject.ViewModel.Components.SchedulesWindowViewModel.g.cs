// <auto-generated/>
#pragma warning disable
#nullable enable
namespace SemestralProject.ViewModel.Components
{
    /// <inheritdoc/>
    partial class SchedulesWindowViewModel
    {
        /// <inheritdoc cref="availableSchedules"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> AvailableSchedules
        {
            get => availableSchedules;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("availableSchedules")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule>>.Default.Equals(availableSchedules, value))
                {
                    OnAvailableSchedulesChanging(value);
                    OnAvailableSchedulesChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.AvailableSchedules);
                    availableSchedules = value;
                    OnAvailableSchedulesChanged(value);
                    OnAvailableSchedulesChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.AvailableSchedules);
                }
            }
        }

        /// <inheritdoc cref="setSchedules"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> SetSchedules
        {
            get => setSchedules;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("setSchedules")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule>>.Default.Equals(setSchedules, value))
                {
                    OnSetSchedulesChanging(value);
                    OnSetSchedulesChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SetSchedules);
                    setSchedules = value;
                    OnSetSchedulesChanged(value);
                    OnSetSchedulesChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SetSchedules);
                }
            }
        }

        /// <inheritdoc cref="lines"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line> Lines
        {
            get => lines;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("lines")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line>>.Default.Equals(lines, value))
                {
                    OnLinesChanging(value);
                    OnLinesChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.Lines);
                    lines = value;
                    OnLinesChanged(value);
                    OnLinesChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Lines);
                }
            }
        }

        /// <inheritdoc cref="selectedSet"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::SemestralProject.Model.LightSchedule? SelectedSet
        {
            get => selectedSet;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::SemestralProject.Model.LightSchedule?>.Default.Equals(selectedSet, value))
                {
                    OnSelectedSetChanging(value);
                    OnSelectedSetChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedSet);
                    selectedSet = value;
                    OnSelectedSetChanged(value);
                    OnSelectedSetChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedSet);
                }
            }
        }

        /// <inheritdoc cref="selectedAvailable"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::SemestralProject.Model.LightSchedule? SelectedAvailable
        {
            get => selectedAvailable;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::SemestralProject.Model.LightSchedule?>.Default.Equals(selectedAvailable, value))
                {
                    OnSelectedAvailableChanging(value);
                    OnSelectedAvailableChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedAvailable);
                    selectedAvailable = value;
                    OnSelectedAvailableChanged(value);
                    OnSelectedAvailableChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedAvailable);
                }
            }
        }

        /// <inheritdoc cref="selectedLine"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::SemestralProject.Model.Entities.Line? SelectedLine
        {
            get => selectedLine;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::SemestralProject.Model.Entities.Line?>.Default.Equals(selectedLine, value))
                {
                    OnSelectedLineChanging(value);
                    OnSelectedLineChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedLine);
                    selectedLine = value;
                    OnSelectedLineChanged(value);
                    OnSelectedLineChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedLine);
                }
            }
        }

        /// <inheritdoc cref="depText"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string DepText
        {
            get => depText;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("depText")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(depText, value))
                {
                    OnDepTextChanging(value);
                    OnDepTextChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.DepText);
                    depText = value;
                    OnDepTextChanged(value);
                    OnDepTextChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.DepText);
                }
            }
        }

        /// <inheritdoc cref="arrText"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string ArrText
        {
            get => arrText;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("arrText")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(arrText, value))
                {
                    OnArrTextChanging(value);
                    OnArrTextChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.ArrText);
                    arrText = value;
                    OnArrTextChanged(value);
                    OnArrTextChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.ArrText);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="AvailableSchedules"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="AvailableSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAvailableSchedulesChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> value);
        /// <summary>Executes the logic for when <see cref="AvailableSchedules"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="AvailableSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAvailableSchedulesChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> newValue);
        /// <summary>Executes the logic for when <see cref="AvailableSchedules"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="AvailableSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAvailableSchedulesChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> value);
        /// <summary>Executes the logic for when <see cref="AvailableSchedules"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="AvailableSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnAvailableSchedulesChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> newValue);
        /// <summary>Executes the logic for when <see cref="SetSchedules"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SetSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSetSchedulesChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> value);
        /// <summary>Executes the logic for when <see cref="SetSchedules"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SetSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSetSchedulesChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> newValue);
        /// <summary>Executes the logic for when <see cref="SetSchedules"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SetSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSetSchedulesChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> value);
        /// <summary>Executes the logic for when <see cref="SetSchedules"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SetSchedules"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSetSchedulesChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.LightSchedule> newValue);
        /// <summary>Executes the logic for when <see cref="Lines"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Lines"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLinesChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line> value);
        /// <summary>Executes the logic for when <see cref="Lines"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Lines"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLinesChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line> newValue);
        /// <summary>Executes the logic for when <see cref="Lines"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Lines"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLinesChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line> value);
        /// <summary>Executes the logic for when <see cref="Lines"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Lines"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLinesChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Line> newValue);
        /// <summary>Executes the logic for when <see cref="SelectedSet"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedSet"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedSetChanging(global::SemestralProject.Model.LightSchedule? value);
        /// <summary>Executes the logic for when <see cref="SelectedSet"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedSet"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedSetChanging(global::SemestralProject.Model.LightSchedule? oldValue, global::SemestralProject.Model.LightSchedule? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedSet"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedSet"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedSetChanged(global::SemestralProject.Model.LightSchedule? value);
        /// <summary>Executes the logic for when <see cref="SelectedSet"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedSet"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedSetChanged(global::SemestralProject.Model.LightSchedule? oldValue, global::SemestralProject.Model.LightSchedule? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedAvailable"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedAvailable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAvailableChanging(global::SemestralProject.Model.LightSchedule? value);
        /// <summary>Executes the logic for when <see cref="SelectedAvailable"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedAvailable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAvailableChanging(global::SemestralProject.Model.LightSchedule? oldValue, global::SemestralProject.Model.LightSchedule? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedAvailable"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedAvailable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAvailableChanged(global::SemestralProject.Model.LightSchedule? value);
        /// <summary>Executes the logic for when <see cref="SelectedAvailable"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedAvailable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedAvailableChanged(global::SemestralProject.Model.LightSchedule? oldValue, global::SemestralProject.Model.LightSchedule? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedLine"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedLine"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedLineChanging(global::SemestralProject.Model.Entities.Line? value);
        /// <summary>Executes the logic for when <see cref="SelectedLine"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedLine"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedLineChanging(global::SemestralProject.Model.Entities.Line? oldValue, global::SemestralProject.Model.Entities.Line? newValue);
        /// <summary>Executes the logic for when <see cref="SelectedLine"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedLine"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedLineChanged(global::SemestralProject.Model.Entities.Line? value);
        /// <summary>Executes the logic for when <see cref="SelectedLine"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedLine"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedLineChanged(global::SemestralProject.Model.Entities.Line? oldValue, global::SemestralProject.Model.Entities.Line? newValue);
        /// <summary>Executes the logic for when <see cref="DepText"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="DepText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDepTextChanging(string value);
        /// <summary>Executes the logic for when <see cref="DepText"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="DepText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDepTextChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="DepText"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="DepText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDepTextChanged(string value);
        /// <summary>Executes the logic for when <see cref="DepText"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="DepText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnDepTextChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="ArrText"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ArrText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnArrTextChanging(string value);
        /// <summary>Executes the logic for when <see cref="ArrText"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ArrText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnArrTextChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="ArrText"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ArrText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnArrTextChanged(string value);
        /// <summary>Executes the logic for when <see cref="ArrText"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ArrText"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnArrTextChanged(string? oldValue, string newValue);
    }
}