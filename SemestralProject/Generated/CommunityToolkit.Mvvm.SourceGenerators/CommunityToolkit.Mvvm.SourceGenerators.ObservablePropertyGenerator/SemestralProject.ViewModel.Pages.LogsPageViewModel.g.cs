// <auto-generated/>
#pragma warning disable
#nullable enable
namespace SemestralProject.ViewModel.Pages
{
    /// <inheritdoc/>
    partial class LogsPageViewModel
    {
        /// <inheritdoc cref="logs"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log> Logs
        {
            get => logs;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("logs")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log>>.Default.Equals(logs, value))
                {
                    OnLogsChanging(value);
                    OnLogsChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.Logs);
                    logs = value;
                    OnLogsChanged(value);
                    OnLogsChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.Logs);
                }
            }
        }

        /// <inheritdoc cref="filterOperations"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<string> FilterOperations
        {
            get => filterOperations;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("filterOperations")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<string>>.Default.Equals(filterOperations, value))
                {
                    OnFilterOperationsChanging(value);
                    OnFilterOperationsChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.FilterOperations);
                    filterOperations = value;
                    OnFilterOperationsChanged(value);
                    OnFilterOperationsChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.FilterOperations);
                }
            }
        }

        /// <inheritdoc cref="filterTables"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::System.Collections.ObjectModel.ObservableCollection<string> FilterTables
        {
            get => filterTables;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("filterTables")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::System.Collections.ObjectModel.ObservableCollection<string>>.Default.Equals(filterTables, value))
                {
                    OnFilterTablesChanging(value);
                    OnFilterTablesChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.FilterTables);
                    filterTables = value;
                    OnFilterTablesChanged(value);
                    OnFilterTablesChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.FilterTables);
                }
            }
        }

        /// <inheritdoc cref="selectedOperation"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string SelectedOperation
        {
            get => selectedOperation;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("selectedOperation")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(selectedOperation, value))
                {
                    OnSelectedOperationChanging(value);
                    OnSelectedOperationChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedOperation);
                    selectedOperation = value;
                    OnSelectedOperationChanged(value);
                    OnSelectedOperationChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedOperation);
                }
            }
        }

        /// <inheritdoc cref="selectedTable"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string SelectedTable
        {
            get => selectedTable;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("selectedTable")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string>.Default.Equals(selectedTable, value))
                {
                    OnSelectedTableChanging(value);
                    OnSelectedTableChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SelectedTable);
                    selectedTable = value;
                    OnSelectedTableChanged(value);
                    OnSelectedTableChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SelectedTable);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="Logs"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Logs"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLogsChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log> value);
        /// <summary>Executes the logic for when <see cref="Logs"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="Logs"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLogsChanging(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log> newValue);
        /// <summary>Executes the logic for when <see cref="Logs"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Logs"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLogsChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log> value);
        /// <summary>Executes the logic for when <see cref="Logs"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="Logs"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnLogsChanged(global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<global::SemestralProject.Model.Entities.Log> newValue);
        /// <summary>Executes the logic for when <see cref="FilterOperations"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="FilterOperations"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterOperationsChanging(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        /// <summary>Executes the logic for when <see cref="FilterOperations"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="FilterOperations"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterOperationsChanging(global::System.Collections.ObjectModel.ObservableCollection<string>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<string> newValue);
        /// <summary>Executes the logic for when <see cref="FilterOperations"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="FilterOperations"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterOperationsChanged(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        /// <summary>Executes the logic for when <see cref="FilterOperations"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="FilterOperations"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterOperationsChanged(global::System.Collections.ObjectModel.ObservableCollection<string>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<string> newValue);
        /// <summary>Executes the logic for when <see cref="FilterTables"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="FilterTables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterTablesChanging(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        /// <summary>Executes the logic for when <see cref="FilterTables"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="FilterTables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterTablesChanging(global::System.Collections.ObjectModel.ObservableCollection<string>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<string> newValue);
        /// <summary>Executes the logic for when <see cref="FilterTables"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="FilterTables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterTablesChanged(global::System.Collections.ObjectModel.ObservableCollection<string> value);
        /// <summary>Executes the logic for when <see cref="FilterTables"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="FilterTables"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnFilterTablesChanged(global::System.Collections.ObjectModel.ObservableCollection<string>? oldValue, global::System.Collections.ObjectModel.ObservableCollection<string> newValue);
        /// <summary>Executes the logic for when <see cref="SelectedOperation"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedOperation"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedOperationChanging(string value);
        /// <summary>Executes the logic for when <see cref="SelectedOperation"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedOperation"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedOperationChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="SelectedOperation"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedOperation"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedOperationChanged(string value);
        /// <summary>Executes the logic for when <see cref="SelectedOperation"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedOperation"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedOperationChanged(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanging(string value);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanging(string? oldValue, string newValue);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanged(string value);
        /// <summary>Executes the logic for when <see cref="SelectedTable"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SelectedTable"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSelectedTableChanged(string? oldValue, string newValue);
    }
}